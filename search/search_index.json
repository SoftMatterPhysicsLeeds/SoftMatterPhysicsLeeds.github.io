{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SMP Laboratory Documentation","text":"<p>This website contains standard operating procedures for SMP equipment. Articles marked with  in the sidebar are works-in-progress and should be used with caution.</p> <p>Warning</p> <p>The documentation is only meant to supplement proper training: you should always be trained by a competent user before using a piece of equipment. </p>"},{"location":"#list-of-labs","title":"List of labs:","text":""},{"location":"#lc-front-end-prep-lab-118","title":"LC Front-End (Prep Lab) - 1.18","text":"<ul> <li>UV curing aparatus (several options)</li> <li>Benchtop centrifuge</li> <li>Benchtop spin-coater</li> </ul>"},{"location":"#lc-back-end-clean-room-118c","title":"LC Back-end (Clean Room) - 1.18C","text":"<ul> <li>Rubbing machines (for rubbing the alignment layer on liquid crystal devices) </li> <li>Laurell WS-650Mz-8NPPB spin coater</li> <li>UV-Ozone cleaner (substrate preparation)</li> <li>PlasmaEtch PE-25 plasma etcher (oxygen fed)</li> </ul>"},{"location":"#microscopy-119","title":"Microscopy - 1.19","text":"<ul> <li>Various polarising optical microscopes (Olympus BH2, Leica DM2700) with cameras (Nikon, DeltaPix) for capturing images</li> <li>Edinburgh Instruments FLS1000 fluorimeter</li> <li>Various oscilloscopes, amplifiers, function generators, dielectric spectrometers for doing electro-optics  </li> </ul>"},{"location":"#modelling-123","title":"Modelling - 1.23","text":"<ul> <li>3D printers</li> <li>Resin printer</li> </ul>"},{"location":"#small-darkroom-124","title":"Small darkroom - 1.24","text":"<ul> <li>Renishaw InVia Raman Spectrometer (wavelength = 532nm)</li> <li>Abb\u00e9 refractometer</li> </ul>"},{"location":"#level-3-optics-teaching-large-darkroom-125","title":"Level 3+ Optics Teaching (Large darkroom) - 1.25","text":"<ul> <li>various benchtop optical set-ups, for both teaching and research</li> </ul>"},{"location":"#laser-darkroom-308","title":"Laser Darkroom - 3.08","text":"<ul> <li>LS Instruments 3D Photocorrelation Spectrometer</li> <li>JRS Instruments Brillouin Spectrometer</li> </ul>"},{"location":"#prep-lab-309","title":"Prep Lab - 3.09","text":"<ul> <li>Vacuum Ovens</li> <li>Karl-Fischer titrator</li> <li>MBraun LabMaster100 Glove Box (nitrogen-filled)</li> <li>Rotary evaporator</li> </ul>"},{"location":"#rheology-and-characterisation-310","title":"Rheology and Characterisation - 3.10","text":"<ul> <li>TA Instruments Q20 and Q2000 differential scanning calorimeters</li> <li>Anton-Paar MCR302 rheometer</li> <li>Rheometrics DMTA</li> <li>Rheometrics RDS</li> <li>TA Instruments DMA 850</li> <li>Rudolph polishing machine</li> <li>Bespoke gas diffusion rig</li> <li>Olympus BH2 for optical characterisation</li> </ul>"},{"location":"#sst-solid-state-testing-311","title":"SST (solid-state testing) - 3.11","text":"<ul> <li>Rosand impact tester</li> <li>Instron 5564 tensile tester</li> <li>Labortech tensile tester</li> <li>Hot Presses</li> <li>Furnace (20 - 3000C)</li> <li>Vacuum Ovens</li> </ul>"},{"location":"#spectroscopy-312","title":"Spectroscopy - 3.12","text":"<ul> <li>Novocontrol dielectric spectrometer (Alpha-A) with Quatro cryosystem </li> <li>Rheometrics ARES rheometer</li> </ul>"},{"location":"#level-3-teaching-313","title":"Level 3+ teaching - 3.13","text":"<ul> <li>Magritek Spinsolve 43 MHz Carbon benctop NMR</li> <li>Stelar FFC benchtop NMR</li> </ul>"},{"location":"#nmr-lab-chemistry-g02a","title":"NMR Lab - Chemistry G.02a","text":"<ul> <li>Bruker Ultra-shield-plus 400 MHz NMR</li> </ul>"},{"location":"anton-paar/","title":"Anton-Paar Rheometer","text":"<p>Author: Korel Bayram</p>"},{"location":"anton-paar/#initial-set-up","title":"Initial Set-Up","text":"<ol> <li>Open compressed air regulator (should be set to 100PSI).</li> <li>Turn on the water bath.</li> <li>Turn on the rheometer. </li> <li>Turn on the PC and load Rheocompass (control software)</li> <li>Attach the relevant base plate. Tools for doing so are located next to the machine.</li> <li> <p>Open the 'Control Panel' (right hand side of the screen) and click on 'Initialise'.</p> <p> </p> </li> <li> <p>Attach measuring tool to rheometer, set temperature and zero the gap using the same panel used for initialisation.      <p> </p>"},{"location":"anton-paar/#calibration","title":"Calibration","text":"<p>Info</p> <p>The calibration procedure should be performed at the beginning of your set of measurements using the sample geometry you intend to measure with. </p> <ol> <li> <p>Go to 'My Apps' and click on 'Verification and Adjustment' at the bottom of the page.</p> <p> </p> <li> <p>Click on 'Adjust Drive'</p> <p> </p>"},{"location":"bruker-nmr-diffusion/","title":"Bruker NMR: Diffusion Measurements","text":"<p>Authors: Amjad Alghamdi, Pallavi Kumari and Dan Baker</p> <p>This document includes instructions on how to set up and run diffusion measurements using the Bruker NMR, as an aid for people who have already been trained. This document does not replace training.</p>"},{"location":"bruker-nmr-diffusion/#measurement-setup","title":"Measurement setup","text":"<ol> <li>Insert the NMR tube inside the blue spinner turbine and measure the sample height using the depth gauge (as shown in the figure). Remove the tube from the depth guage with spinner turbine still attached to it. Press the lift button on the BSMS unit and a compressed air will start coming out from the bore of the magnet (the sound of it is loud enough to hear). Now, insert the NMR tube/spinner into the the bore of the magnet. Then, click \u201clift\u201d again on the BSMS unit to lower the tube.</li> </ol> <p>Open TopSpin software (if it isn't already).</p> <ol> <li> <p>Pick a pre-existing diffusion measurement and drag the filename from the file explorer into the main window.      </p> </li> <li> <p>Click Start-&gt;Create Dataset and fill out the New... dialogue box:</p> <ul> <li>Name will be the name of the measurement folder</li> <li>EXPNO and PROCNO are arbitrary</li> <li>Make sure use current parameters is selected.</li> <li>Change DIR to be your named folder.</li> </ul> <p> </p> </li> <li> <p>Type \"diff\" into the command line. </p> </li> <li> <p>Enter the expected diffusion coefficient </p> </li> <li> <p>Wobble probe (\"wobb\" on command line)      </p> </li> <li> <p>Type \"zg\" to start measurement.</p> </li> </ol>"},{"location":"bruker-nmr-diffusion/#process-fidspectra","title":"Process FID/spectra","text":"<ol> <li> <p>The FIDs (free induction decays) should decrease as a function of increasing field strength. If the FIDs are all the same height and the magnitudes are relatively large (1e3 or so) then you should go back to 3. and decrease the expected diffusion coefficient by a decade. If the FIDs are all a similar height and the magnitudes are relatively small, you should increase the expected diffusion coefficient by a decade.       </p> </li> <li> <p>Fourier transform the FIDs in the F2 direction by typing \"xf2\" in the command line. </p> </li> <li> <p>If required, calibrate the ppm axis by going to Process-&gt;Calib. Axis and picking a peak with known ppm. Enter this into the F2 box in the dialogue that pops up.       </p> </li> <li> <p>Phase the spectra by going to Process-&gt;Adjust Phase </p> </li> <li> <p>Add three spectra to the phase list by right clicking on the graph in different row positions. Choose rows at lower field values (maximum intensity), such as 1, 3 and 6. Once these have been added, click R in the window ribbon.       </p> </li> <li> <p>Click and hold 0 in the window ribbon and move the mouse up and down to adjust the 0th order phase until the baseline is flat and the peaks are well defined. You might then also need to adjust the 1st order phase in a similar manner by clicking 1 and moving the mouse up and down.       </p> </li> <li> <p>Once happy, click the return and save button (Save icon with return arrow in the ribbon). </p> </li> <li>Click return </li> </ol>"},{"location":"bruker-nmr-diffusion/#determine-diffusion-coefficient","title":"Determine diffusion coefficient","text":"<ol> <li> <p>Go to Analyse-&gt;Dynamics-&gt;T1T2(t1t2) </p> </li> <li> <p>Click FID and select Spectrum from the resulting dialogue box. Choose Slice Number = 1-3.       </p> </li> <li> <p>Click Peaks/Ranges and select Manual Integration. Click Ok in the resulting dialogue box.       </p> </li> <li> <p>Select each peak to analyse by dragging the mouse over each peak. One all peaks have been selected, click the Save regions button (save icon with subscript A) and click Export Regions to Relaxation Module and .ret.       </p> </li> <li> <p>Click Relaxation in the top banner. </p> </li> <li>Click the autoscale button if you do not see any data.</li> <li> <p>Click the &gt;&gt; button to fit all peaks at once in either Intensity or Area.       </p> </li> <li> <p>To save the fit report (including values of D), click i (information symbol) and then select File-&gt;Save As. The convention is to save in home/NMRSU/NMR data/Your name/filename.txt.      </p> </li> </ol>"},{"location":"dls/","title":"3D Photon Correlation Spectrometer","text":"<p>Author: Dan Baker</p>"},{"location":"dls/#work-in-progress","title":"Work in progress!","text":"<p>The following procedure is for running the LS Instruments 3D Photocorrelation Spectrometer in 3.08.</p>"},{"location":"dls/#initial-setup","title":"Initial setup","text":"<ol> <li>Turn on the laser.</li> <li>Turn on both control boxes.</li> <li>Turn on both switches for the water bath (controller and bath).</li> <li>Turn on PC (if it isn't already).</li> <li>Start the measurement software (make sure nothing is blocking the sample goniometer from moving)</li> </ol>"},{"location":"dls/#load-the-sample","title":"Load the sample","text":"<p>Note</p> <p>Samples should either be put into 10mm diameter 'culture tubes' or 5mm NMR tubes. They should be filled to ~10mm up the tube so that the laser passes through the sample</p> <ol> <li>Clean the outside of the sample tube with IPA on a lint-free cloth (make sure you wear nitrile gloves to do this).</li> <li>Insert the tube into the relevant holder. For the 10mm tube holder, push the sample down so that the lid sits flush with the top of the holder. </li> <li>Check that the laser passes through the sample: turn the laser intensity control from 'Auto' to 'Set Laser Intensity' and change this to something small (1% for example) and have a look at the scattered light through the sample VAT window. It should look like a continuous red line through the sample. If it's diffuse then your sample is probably too concentrated. If the path deviates then it's likely hitting the meniscus at the top of the sample so you either need to put more sample in the tube or reseat the tube in the holder. </li> </ol>"},{"location":"dls/#perform-initial-test-measurement","title":"Perform initial test measurement","text":"<ol> <li>Set the sample goniometer to 90\u00b0. </li> <li>Set the laser intensity setting to 'Auto'. </li> <li>Set the temperature. </li> <li>Make sure the tube setting is correct for your sample. </li> <li>Go to Measurement tab and click start measurement. </li> </ol>"},{"location":"dscQ20/","title":"TA Q20 DSC","text":"<p>Author: Dan Baker</p>"},{"location":"dscQ20/#turn-on-cooling-system","title":"Turn on cooling system","text":"<ol> <li>Open the nitrogen tap (turn valve so that it is parallel to the pipe). The pressure should already be set. </li> <li>Switch on the RSC90 (cooling system box) using the green switch. </li> <li>Activate the cooling system by navigating to Control -&gt; Event and clicking On in the control software. </li> </ol> <p>Info</p> <p>If the control software is not open already, open TA Instrument Explorer and double click on the DSC image.</p>"},{"location":"dscQ20/#sample-preparation","title":"Sample preparation","text":"<ol> <li>Weigh a pan and lid (this will almost certainly be a TZero aluminium hermetic set). The weight should be ~ 51mg. If it's significantly more than this (i.e. ~65mg) then you probably have two lids stuck together. </li> <li>Tare (zero) the balance.</li> <li>Take the pan off the balance and put some sample in. The amount required is not fixed but you should ensure that there is sufficient sample to cover the bottom of the pan (5-15mg for solid polymers and 1-2 'drops' of a liquid sample is a good starting point, usually). Check weight using the balance.</li> <li>Put the filled pan into the bottom die for the press (blue for the aluminium hermetic pans) and put the lid on top (dimple side down). </li> <li>Put the die with pan into the press.</li> <li>Pull the lever until it hits the mechanical 'stop'. This shouldn't require much force at all</li> <li>Take out the bottom die and place it on the 'post' at the front of the press. This should pop out the filled, and sealed, DSC pan.</li> <li>Measure the weight of the filled pan (should just display the weight of the sample since the balance was tared with the pan and lid on).</li> <li>Place the filled sample pan into an autosampler slot (doesn't matter which but make sure you know which). </li> </ol>"},{"location":"dscQ20/#set-up-measurement-in-the-software","title":"Set up measurement in the software","text":"<p>You should fill in all the relevant information in the three central tabs (Summary, Procedure, Notes). </p> <ol> <li> <p>Summary Tab: </p> <p>Fill in the basic sample information in the first tab including: </p> <ul> <li>sample name</li> <li>sample mass</li> <li>slot number</li> </ul> </li> <li> <p>Procedure Tab: </p> <p> </p> <ul> <li>Click Editor</li> <li>Add/remove steps as required.</li> <li>Save/load method file as required.</li> </ul> </li> <li> <p>Notes Tab:       </p> <ul> <li>Add your name. </li> </ul> </li> </ol>"},{"location":"folium-rubbing/","title":"Folium Rubbing Machine","text":"<p>Author: Tom Moorhouse</p> <p>This document includes instructions on how to set up and run the Folium rubbing machine (RM), as an aid for people who have already been trained. This document does not replace training.</p> <p></p>"},{"location":"folium-rubbing/#1-sample-preparation","title":"1. Sample Preparation","text":"<p>Before using the rubbing machine, ensure you have prepared substrates with an alignment layer to be rubbed. Typically this will be a planar aligning polymer.</p> <p>Substrate examples: Microscope glass, ITO coated glass etc. Alignment layer examples (planar): PVA, Polyimide, Polystyrene etc.</p>"},{"location":"folium-rubbing/#2-machine-start-up","title":"2. Machine Start-Up","text":"<p>a.  Turn on the RM at the mains (Figure 2a). b.  To the right of the RM, open the vacuum tap by rotating anti-clockwise (open direction indicated with \u2018+\u2019 on tap head). c.  Open the access door to the RM and turn the red \u2018vacuum chuck\u2019 valve to the ON position as shown below. You should now audibly hear air being pulled through the holes in the vacuum stage.</p> <p></p> <p>d.  The sample stage may not be in its starting position when you come to the RM. e.  If this is the case, the control box will display a message. f.  Press the touchscreen to return the stage to its start position, this will cause the stage to move to the right on its linear rail. g.  Once the stage has returned, the control box will now display \u2018RUB\u2019. The RM is now ready for experimental setup. Press \u2018RUB\u2019 to continue.</p>"},{"location":"folium-rubbing/#3-experimental-setup","title":"3. Experimental Setup","text":"<p>a.  Once the \u2018RUB\u2019 button is pressed, the \u2018carriage\u2019 or stage speed selection window will appear. This allows you to specify the sample stage translation speed in cm/s. b.  To change the speed, press the bottom-left field, indicated by the black arrow. The value in the field will begin blinking and the numerical keyboard will appear, which means it can now be changed. c.  Select a value from the numerical keyboard between 2 and 8cm/s. Confirm the selection by pressing the \u2018return\u2019 button, highlighted in red below. </p> <p>Info</p> <p>Slow stage speeds (2-4cm/s) appear to cause excess vibrations in the stage during translation. Higher stage speeds allow the drive motor to run smoother, reducing vibrations.</p> <p>d.  The value in the field will now stop blinking and the numerical keyboard will disappear. Press the value again if you want to change the stage speed or press the \u2018Next\u2019 button to continue.</p> <p></p> <p>e.  The following screen will now be displayed. In the bottom right corner of the screen, there is a checkbox, highlighted in red below. When un-checked, this indicates that there is not a strong enough vacuum being pulled to start the drum i.e. sample is not covering all the vacuum holes on the stage. f.  As shown, an acetate sheet with a rectangular section removed is placed on the stage, this covers the vac holes outside the area of your sample. This should be tailored to fit the shape of your substrate/substrates.  g.  Place your sample on the vacuum stage, covering the remaining vac holes that are not covered by the acetate sheet.</p> <p>Warning</p> <p>Ensure your sample is flat on the surface of the stage and NOT resting on the acetate sheet, as this will angle your substrate and result in uneven rubbing strength.</p> <p>h.  The vacuum check box will now be checked and you can now press \u2018Start Drum\u2019 to start the roller.</p> <p></p> <p>i.  Adjust the sample stage height to vary the rubbing strength. \u201914.20\u2019 on the micrometer scale provided uniform planar alignment for a PVA alignment layer on microscope glass (1.05mm thick). Higher values -&gt; larger roller-substrate separation -&gt; lighter rubbing e.g. \u201913.00\u2019 will provide harder rubbing than \u201914.00\u2019.</p> <p>Info</p> <p>This suggested height may not be perfect in all cases, but provides a good starting point. Adjust accordingly for different substrate thicknesses e.g. melinex/ITO glass etc.</p> <p>j.  Use the knob on the control box to adjust the roller speed. Anywhere between 500 \u2013 1000rpm should be sufficient for typical cases, but if higher rubbing strengths are required, the roller speed can be safely increased to 2000rpm. k.  Check your substrate is positioned as you would like, then press \u2018RUB\u2019 on the roller speed screen to commence rubbing. The stage will translate beneath the roller and the \u2018Rubbing Complete\u2019 screen will be displayed once it has finished. l.  Open the access door, turn off the vacuum using the red vacuum chuck valve and carefully remove your sample. </p> <p>Info</p> <p>Don\u2019t forget to make a note of the rubbing direction you have just applied, this can be done by carefully drawing a line/arrow on the underside of your substrate (can be done prior to rubbing).</p> <p></p> <p>Info</p> <p>If you want to carry out more rubbing, return to step 2d and repeat the process as many times as required.</p>"},{"location":"folium-rubbing/#4-system-shutdown","title":"4. System Shutdown","text":"<p>a. After your final rubbing pass, return the carriage to its start positon, ready for the next user. b. Turn the vacuum chuck valve to the off position, as shown below. c. Turn the external vacuum tap clockwise to turn off the vacuum. Don\u2019t overtighten the tap! d. Turn the power supply off at the mains.</p> <p></p>"},{"location":"git/","title":"Setting up git and Github","text":"<p>Author: Dan Baker</p> <p>This document will explain how to set up a git repository and the process for storing this repository on Github. It is not meant to be completely exhaustive (I'm definitely not an expert) and so you should suppliment whatever I write here with other documentation (I will not go into much detail about how git actually works.)</p>"},{"location":"git/#set-up-git-repository-repo","title":"Set up git repository (repo)","text":"<ol> <li> <p>Initlialise repo</p> <p>Open a terminal (Command Prompt or PowerShell on Windows) and change directory (\"cd\") to the folder that contains the files you want to 'version control' and initlialise a new git repository:   </p> <pre><code>cd ~/example-project  \ngit init\n</code></pre> </li> <li> <p>Add files to the repo</p> <p>To add a single file called 'test.txt':</p> <pre><code>git add test.text\n</code></pre> <p>To add all 'changed' files within a folder (i.e. all of them for a new repo):</p> <pre><code>git add .\n</code></pre> </li> <li> <p>Commit files/changes to the repo</p> <pre><code>git commit -m \"description of commit\"\n</code></pre> <p>You can write a description of the commit using the '-m' flag. </p> </li> <li> <p>Make a new branch for a feature</p> <p>To avoid 'experimenting' on the main branch of a repo, you should make another experimental branch for testing and then merge it back into main when everything works correctly. </p> <pre><code>git checkout -b &lt;new-branch&gt;\n# do a load of stuff \ngit checkout main # if main branch is called 'main'\ngit merge &lt;new-branch&gt;\n</code></pre> </li> <li> <p>Rolling back to a previous commit hash</p> <p>If you make a mistake, you can revert to a previous commit. To list all the commits associated with a repo, you can look at the log: </p> <pre><code>git log --oneline\n</code></pre> <p>You can then copy the hash of the commit you want to roll-back to and 'reset' the repo to this commit instead:</p> <pre><code>git reset --hard &lt;commit-hash&gt;\n</code></pre> <p>The '--hard' flag also resets the history of the repo so that the 'unwanted' commit will no longer show up in the log. If you did this by mistake you can still get it back by finding the deleted commit hash using:</p> <pre><code>git reflog\n</code></pre> <p>and then checking out to that commit hash, creating a new branch and then merging that branch back into the 'main branch'</p> <pre><code>git checkout &lt;commit-hash&gt;\ngit switch -c &lt;branch-name&gt;\ngit checkout main\ngit merge &lt;branch-name&gt;\n</code></pre> </li> </ol>"},{"location":"git/#add-repository-to-github","title":"Add repository to Github","text":"<ol> <li> <p>Log in to Github and then make a new repository.</p> </li> <li> <p>You then need to add the 'remote' to your git repository: </p> <pre><code>git remote add origin https://github.com/&lt;your-github-username&gt;/&lt;your-repository-name&gt;.git\ngit branch -M main\ngit push -u origin main\n</code></pre> </li> <li> <p>You can then push changes to Github when you make them on your local repository: </p> <pre><code>git add .\ngit commit -m \"commit message\"\ngit push\n</code></pre> </li> </ol>"},{"location":"git/#contributing-to-existing-project-collaborating","title":"Contributing to existing project / collaborating","text":"<ol> <li> <p>Clone the repository (or pull from upstream if you already have it)</p> <pre><code>git clone https://github.com/&lt;github-username&gt;/&lt;repository-name&gt;.git\n\n# or\n\ngit pull # from within containing folder i.e. the one with the .git folder\n</code></pre> </li> <li> <p>Make a new branch</p> <pre><code>git checkout -m new_feature # change \"new_feature\" to whatever you like\n</code></pre> </li> <li> <p>Add feature, push to origin as usual</p> <pre><code>git add .\ngit commit -m \"added new feature\"\ngit push\n</code></pre> </li> <li> <p>Create a pull request</p> <p>Create a pull request on Github in order to merge your branch with the 'main' branch. The rules for doing this will be different for different projects. </p> </li> </ol>"},{"location":"hotpress/","title":"Hot Presses","text":"<p>Author: Dan Baker</p>"},{"location":"hotpress/#pressure-calculator","title":"Pressure calculator","text":"Required Sample Pressure (MPa): Sample Area (cm<sup>2</sup>): Calculate"},{"location":"hotpress/#pressure-conversions","title":"Pressure Conversions","text":"<p>\\(P_S\\) = Required Sample Pressure </p> <p>\\(P_R\\) = Ram Pressure </p> <p>\\(A_S\\) = Sample Area </p> <p>\\(A_R\\) = Ram Area </p> \\[     P_R = \\frac{P_S  A_S}{A_R} \\] <p>PSI = Tons per inch<sup>2</sup> * 2239 MPa = PSI / 145 </p> <p>(Remember that hot press pressure scales measure in tons per 4 inch<sup>2</sup> i.e. 4 * tons per inch<sup>2</sup>)</p>"},{"location":"latex/","title":"\\(\\LaTeX\\)","text":""},{"location":"latex/#start-a-new-blank-project-in-overleaf","title":"Start a new, blank project in Overleaf","text":"<ol> <li>Log in to Overleaf</li> <li>Click 'New Project'</li> <li>Click 'Blank Project'</li> <li>Name it something and click 'Create'.</li> </ol>"},{"location":"latex/#getting-started","title":"Getting started","text":"<p>When 'Blank Project' is selected, Overleaf will open the editor with the following code added in (I called my project 'TestBlankTemplate'): </p> <pre><code>\\documentclass{article}\n\\usepackage{graphicx} % Required for inserting images\n\n\\title{TestBlankTemplate}\n\\author{Your Name}\n\\date{February 2025}\n\n\\begin{document}\n\n\\maketitle\n\n\\section{Introduction}\n\n\\end{document}\n</code></pre> <p>All \\(\\LaTeX\\) functions are prefaced by backslashes. The main, required argument goes in {} and optional arguments go in []: <code>\\examplefunction[option1, option2]{mainarg}</code></p> <ul> <li><code>\\documentclass</code> sets the... class of the...document. There are many prebuilt examples. We can use parameters passed to this function to change various ways in which the document is formatted overall, for example, if we want the document to be a two columned article: <code>\\documentclass[twocolumn]{article}</code></li> <li>The <code>\\usepackage</code> function is used to load in extra functionality (like <code>import</code> in Python). In this case, <code>\\usepackage{graphicx}</code> loads the `graphicx' package (so that images can be rendered) into the scope of the current document. </li> <li><code>\\title</code> sets the document title (...).</li> <li><code>\\author</code> sets the document author (you're seeing how straightforward this is, right?).</li> <li><code>\\date</code> sets the date. If you don't want a date to be displayed, call the function with an empty argument: <code>\\date{}</code>.</li> <li>The main text of the document needs to go in between the <code>\\begin{document}</code> and <code>\\end{document}</code> function calls.</li> <li>We can use the <code>\\section</code> function to denote sections within the document (and <code>\\subsection</code> and <code>\\subsubsection</code>). </li> </ul> <p>Comments are denoted by <code>%</code> - text after a <code>%</code> on a particular line will not be compiled by <code>$LaTeX</code>, so you can use these to write notes about the function of a particular line, for example.</p>"},{"location":"latex/#equations","title":"Equations","text":"<p>To add an equation, we need to create an 'equation' environment. The following is the code you would use to write the Havriliak-Negami function: </p> <pre><code>\\begin{equation}\n    \\varepsilon^{*}(\\omega) = \\varepsilon_{\\infty} + \n    \\frac{\\Delta\\varepsilon}\n    {(1 + (i\\omega\\tau_{\\mathrm{HN}})^{\\alpha})^{\\beta}}\n    \\label{eq:HN}\n\\end{equation}\n</code></pre> <ul> <li>The <code>\\begin{equation}</code> and <code>\\end{equation}</code> lines denote the beginning and end of the equation environment. </li> <li>We can type various symbols by using a backslash and the symbol name (there are loads of 'symbol lists' online and Overleaf has a 'symbol palette'). For example, \u03b2 would be <code>\\beta</code>.</li> <li>Subscripts and superscripts are rendered using the <code>_</code> and <code>^</code> symbols. If there are more than one symbol/letter to go in the superscript then you should encase the super-/subscripts in curly braces. For example, to write alpha, subscript 'n', superscript 'tau' you would write: <code>\\alpha_{n}^{3\\tau}</code>.</li> <li><code>\\frac{}{}</code> allows us to display fractions as \\(\\frac{a}{b}\\) rather than \\(a/b\\). Numerator goes in the first set of braces, denominator goes in the second. </li> <li>We can use <code>\\mathrm{}</code> to remove the 'mathsy formatting' for letters (i.e. in this case we don't want 'HN' to be italicised). </li> <li>If you want your equation to be 'un-numbered' then you can enclose the equation in <code>\\begin{equation*}</code> and <code>\\end{equation*}</code> instead.</li> </ul> <p>This equation renders as: </p> <p></p> <p>and we can refer to it in the main text using its label: </p> <pre><code>Equation \\ref{eq:HN} is the Havriliak-Negami equation. \n</code></pre>"},{"location":"latex/#inline-mathematical-symbols","title":"Inline mathematical symbols","text":"<p>We often need to add 'inline' maths in the main text (to explain what the symbols mean in an equation, for example). You can invoke an inline equation environment by enclosing the things you want to render in <code>$$</code>. For example, if we wanted to explain the symbols in our Havriliak-Negami equation: </p> <pre><code>where $\\varepsilon^{*}$ is the complex dielectric permittivity, \n$\\varepsilon_{\\infty}$ is the permittivity as frequency tends to infinity, \n$\\Delta\\varepsilon = \\varepsilon_0 - \\varepsilon_{\\infty}$ is the dielectric strength...  \n</code></pre> <p></p>"},{"location":"latex/#full-size-brackets","title":"Full-size brackets","text":"<p>Let's say we wanted to put brackets around the fraction in our Havriliak-Negami equation. If we just add brackets like this: </p> <pre><code>\\begin{equation}\n    \\varepsilon^{*}(\\omega) = \\varepsilon_{\\infty} + \n    (\\frac{\\Delta\\varepsilon}\n    {(1 + (i\\omega\\tau_{\\mathrm{HN}})^{\\alpha})^{\\beta}})\n    \\label{eq:HN}\n\\end{equation}\n</code></pre> <p>then the result looks a bit sad...</p> <p></p> <p>We can fix this by using the <code>\\left</code> and <code>\\right</code> labels before our left and right brackets and they will resize nicely! So: </p> <pre><code>\\begin{equation}\n    \\varepsilon^{*}(\\omega) = \\varepsilon_{\\infty} + \n    \\left(\\frac{\\Delta\\varepsilon}\n    {(1 + (i\\omega\\tau_{\\mathrm{HN}})^{\\alpha})^{\\beta}}\\right)\n    \\label{eq:HN}\n\\end{equation}\n</code></pre> <p>which looks much better!</p> <p></p>"},{"location":"latex/#dealing-with-long-equations","title":"Dealing with long equations","text":"<p>Sometimes we have to write equations that are longer (or close to) the line width. For example, let's write the Ericksen-Leslie solution for viscosity in nematic liquid crystals: </p> <pre><code>\\begin{equation}\n    \\sigma_{\\alpha\\beta} \n    = \\alpha_1\\left(n_\\alpha n_\\beta n_\\mu n_Q A_{\\mu Q}\\right)\n    + \\alpha_2\\left(n_\\alpha N_\\beta\\right)\n    + \\alpha_3\\left(n_\\beta N_\\alpha\\right)\n    + \\alpha_4\\left(A_{\\alpha\\beta}\\right) \n    + \\alpha_5\\left(n_\\alpha n_\\mu A_{\\mu\\beta}\\right)\n    + \\alpha_6\\left(n_\\beta n_\\mu A_{\\mu\\alpha}\\right)\n\\end{equation}\n</code></pre> <p>This renders as: </p> <p></p> <p>which doesn't look totally awful, but is long enough that it pushes the equation number to the next line and isn't completely ideal... One way to solve this problem is to split the equation on to multiple lines and align those lines with a fixed reference point. We can do this with the <code>amsmath</code> package: <code>\\usepackage{amsmath}</code> and the <code>\\split</code> environment it provides: </p> <pre><code>\\begin{equation}\n    \\begin{split}\n    \\sigma_{\\alpha\\beta} \n    &amp; = \\alpha_1\\left(n_\\alpha n_\\beta n_\\mu n_Q A_{\\mu Q}\\right) \\\\\n    &amp; + \\alpha_2\\left(n_\\alpha N_\\beta\\right) \\\\\n    &amp; + \\alpha_3\\left(n_\\beta N_\\alpha\\right)\\\\\n    &amp; + \\alpha_4\\left(A_{\\alpha\\beta}\\right) \\\\\n    &amp; + \\alpha_5\\left(n_\\alpha n_\\mu A_{\\mu\\beta}\\right)\\\\\n    &amp; + \\alpha_6\\left(n_\\beta n_\\mu A_{\\mu\\alpha}\\right)\\\\\n    \\end{split}\n\\end{equation}\n</code></pre> <p>The <code>&amp;</code> symbol sets the point at which each line in the split will be aligned to (here I've chosen this to be at the equals sign for the first line and the plus signs thereafter). As usual, the <code>\\\\</code> symbol denotes a new line. This results in: </p> <p></p> <p>We can pick an choose where to do this alignment. If we wanted two terms per line instead, and align the plus signs with the first \\(\\alpha\\) symbol rather than the equals sign:</p> <pre><code>\\begin{equation}\n    \\begin{split}\n    \\sigma_{\\alpha\\beta} \n     = &amp; \\alpha_1\\left(n_\\alpha n_\\beta n_\\mu n_Q A_{\\mu Q}\\right) \n      + \\alpha_2\\left(n_\\alpha N_\\beta\\right) \\\\\n    &amp; + \\alpha_3\\left(n_\\beta N_\\alpha\\right)\n      + \\alpha_4\\left(A_{\\alpha\\beta}\\right) \\\\\n    &amp; + \\alpha_5\\left(n_\\alpha n_\\mu A_{\\mu\\beta}\\right)\n      + \\alpha_6\\left(n_\\beta n_\\mu A_{\\mu\\alpha}\\right)\\\\\n    \\end{split}\n\\end{equation}\n</code></pre> <p></p>"},{"location":"latex/#figures","title":"Figures","text":"<p>The first thing we need to do is upload our figure to our Overleaf project. On the left hand side of the screen you should see a box with 'main.tex' in. This is our document file. We can upload a figure by dragging and dropping the file into this box, or we can use the upload button (little up-arrow). Here, I've uploaded a figure called 'samplecell.pdf': </p> <p></p> <p>To add this into our document, we need to make a 'figure' environment, and load our figure: </p> <pre><code>\\begin{figure}[]\n    \\centering\n    \\includegraphics[width=0.8\\linewidth]{samplecell.pdf}\n    \\caption{Sample cell for the Novocontrol dielectric spectrometer.}\n    \\label{fig:sample_cell}\n\\end{figure}\n</code></pre> <ul> <li>The <code>\\begin{figure}</code> and <code>\\end{figure}</code> lines denote the beginning and end of the figure environment. We can use the square brackets after the <code>\\begin{figure}</code> call to specify the priority that \\(\\LaTeX\\) should use when positioning the figure on the page. For example, if we use <code>\\begin{figure}[htbp]</code>, this means, first, \\(\\LaTeX\\) will try to place the figure 'here' (i.e. the position in the text where the figure is called), and then the 'top', 'bottom', and finally a whole 'page'.</li> <li><code>\\centering</code> centers the figure relative to the page. </li> <li><code>\\includegraphics</code> loads the figure itself (main argument in {}). Here, we have used an optional argument to specify that the width of the figure should be 0.8 times the <code>\\linewidth</code> parameter, which sets the maximum length of a line. By setting the width relative to <code>\\linewidth</code>, the figure will automatically scale if we, for example, decide to change the margins of the document. </li> <li><code>\\caption</code> sets the text which will be displayed under the figure. This will display as \"Figure X: Caption Text\", where X is the figure number relative to the other figures in the document. This means you don't have to worry about numbering figures!</li> <li><code>\\label</code> allows us to refer to this figure in the text. </li> </ul> <p>The resulting figure looks like this: </p> <p></p> <p>To refer to the figure in the main text, we use the <code>\\ref</code> command. For example: </p> <pre><code>Figure \\ref{fig:sample_cell} is a schematic of the sample cell for the Novocontrol dielectric spectrometer.  \n</code></pre>"},{"location":"latex/#tables","title":"Tables","text":"<p>To add a table, we can use the - you guessed it - 'Table' environment: </p> <p><pre><code>\\begin{table}[]\n    \\centering\n    \\begin{tabular}{c|c}\n         &amp;  \\\\\n         &amp; \n    \\end{tabular}\n    \\caption{Caption}\n    \\label{tab:my_label}\n\\end{table}\n</code></pre> - The <code>\\begin{table}</code> and <code>\\end{table}</code> lines denote the beginning and end of the table environment. We can use the square brackets after the <code>\\begin{table}</code> call to specify the priority that \\(\\LaTeX\\) should use when positioning the table on the page. For example, if we use <code>\\begin{table}[htbp]</code>, this means, first, \\(\\LaTeX\\) will try to place the table 'here' (i.e. the position in the text where the table is called), and then the 'top', 'bottom', and finally a whole 'page'.  - <code>\\centering</code> centers the table relative to the page. - The actual table is rendered within the 'tabular' block (between <code>\\begin{tabular}</code> and <code>\\end{tabular}</code>). The second set of <code>{}</code> after <code>\\begin{tabular}</code> are used to specify the number of columns and how the text within those columns is aligned e.g. <code>{c|c}</code> means two columns with a single vertical line between with the text centered in each column.  - Values are added to the table using <code>&amp;</code> between columns. The end of a row is denoted by <code>\\\\</code> - <code>\\caption</code> sets the text which will be displayed under the table. This will display as \"Table X: Caption Text\", where X is the table number relative to the other tables in the document. - <code>\\label</code> allows us to refer to this table in the text. </p> <p>Let's imagine we have a set of Young's moduli data for some composite samples and we'd like to add this to a report:</p> <p></p> <p>So, we need a table with 6 columns and fill it up with data. We'd also like to:</p> <ol> <li>Have the column headings in bold.</li> <li>Have a horzontal line separating the column headings from the data.</li> <li>Have the 'Average' and 'Standard Error' values for each 'orientation' span 3 rows (to centre them within the three rows that they refer to).</li> </ol> <pre><code>\\begin{table}[]\n    \\centering\n    \\begin{tabular}{|c|c|c|c|c|c|}\n        \\hline\n        &amp;&amp;&amp;&amp;&amp;\\\\\n        \\textbf{Orientation} &amp; \\textbf{Sample 1} &amp; \\textbf{Sample 2} &amp; \\textbf{Sample 3} &amp; \\textbf{Average} &amp; \\textbf{Standard Error}  \\\\\n        &amp;\\textbf{(GPa)}&amp;\\textbf{(GPa)}&amp;\\textbf{(GPa)}&amp;\\textbf{(GPa)}&amp;\\textbf{(GPa)}\\\\\n        &amp;&amp;&amp;&amp;&amp;\\\\\n        \\hline\n        &amp;&amp;&amp;&amp;&amp; \\\\ \n        0 - 1&amp;  3.05&amp;   2.71&amp;   1.96&amp;   \\multirow{3}{*}{3}&amp; \\multirow{3}{*}{0.5}\\\\\n        0 - 2&amp;  3.34&amp;   3.43&amp;   2.44&amp;&amp;\\\\\n        0 - 3&amp;  3.28&amp;   3.61&amp;   3.47&amp;&amp;\\\\\n        &amp;&amp;&amp;&amp;&amp;\\\\\n        45 - 1&amp; 2.54&amp;   2.2&amp;    2.39&amp;   \\multirow{3}{*}{2.2}&amp;   \\multirow{3}{*}{0.4}\\\\\n        45 - 2&amp; 2.43&amp;   1.03&amp;   2.1&amp;&amp;\\\\\n        45 - 3&amp; 2.39&amp;   2.38&amp;   2.29&amp;&amp;\\\\                \n        &amp;&amp;&amp;&amp;&amp;\\\\\n        90 - 1&amp; 4.2&amp;    3.61&amp;   1.05&amp;   \\multirow{3}{*}{3.4} &amp;  \\multirow{3}{*}{1}\\\\\n        90 - 2&amp; 3.56&amp;   4.81&amp;   3.98&amp;&amp;\\\\\n        90 - 3&amp; 3.52&amp;   2.37&amp;   3.21&amp;&amp;\\\\\n        &amp;&amp;&amp;&amp;&amp;\\\\\n        \\hline\n    \\end{tabular}\n    \\caption{Young's modulus}\n    \\label{tab:ym_table}\n\\end{table}\n</code></pre> <ul> <li><code>\\begin{tabular}{|c|c|c|c|c|c|}</code> says that we want 6 columns, separated by vertical lines, with the contents centred. Note we've also used vertical lines on the outsides of the columns so that the table is 'boxed'. </li> <li><code>\\hline</code> draws a horizontal line across the span of the table (we can use these to 'enclose' tables with a top/bottom too, as I have here).</li> <li><code>\\textbf{}</code> makes the text within the braces bold. </li> <li>Values in the table are separated with <code>&amp;</code> (if \\(n\\) is the number of columns, there will always be \\(n-1\\) <code>&amp;</code>s on any particular row). If we want to leave a row entry empty, we just don't put anything between the <code>&amp;</code> (so, we can leave a whole line empty by doing <code>&amp;&amp;&amp;&amp;&amp;\\\\</code> )</li> <li>Rows are terminated with <code>\\\\</code> (line break).</li> <li>We can use the <code>\\multirow</code> package (<code>\\usepackage{multirow}</code> at the beginning of the document) to specify that a value should span over multiple rows (3 in our case). The value in the first set of braces indicates the number of rows to span over, the second value specifies what the width of the contents should be (use <code>*</code> to indicate that the value should span to the pre-defined width of the column), and the third is the text to actually render. So, <code>\\multirow{3}{*}{0.5}</code> would render <code>0.5</code>, spanning 3 rows, using all the available width of the column. </li> </ul> <p>The result looks like this: </p> <p></p>"},{"location":"latex/#references","title":"References","text":"<p>Warning</p> <p>I (Dan) don't use 'reference managers' at all. It's totally possible that your reference manager can produce a .bib that you can use in your \\(\\LaTeX\\) documents, and if you discover that it does then it would be great if you could write some instructions for doing that, and we can add them here too!</p> <p>References for \\(\\LaTeX\\) are managed/compiled using 'BibTeX' and references are stored in '.bib' files. </p> <p>Let's say we want to reference this glorious paper: Cooperative Intramolecular Dynamics Control the Chain-Length-Dependent Glass Transition in Polymers in our document: </p> <ol> <li>Make a new document in the Overleaf project and call it something .bib (I'll use 'references.bib' for this example). </li> <li>Copy the title of the paper and paste it into Google Scholar.</li> <li>Click the 'Cite' button at the bottom of the reference listing.       </li> <li>Click the BibTex button in the 'Cite box' that pops up.       </li> <li> <p>Copy the whole text of the resulting reference and paste it into your .bib file.       </p> </li> <li> <p>Add the following lines just before the <code>\\end{document}</code> call (rename 'references' to whatever your bib is called).     <pre><code>\\bibliographystyle{ieeetr}\n\\bibliography{references}\n</code></pre></p> <p><code>\\bibiographystyle</code> sets the style of the bibliography (...) and <code>\\bibliography</code> loads the actual references (this won't work without a style).</p> </li> <li> <p>We can now refer to our paper using its 'handle': the bit of text just after the @article definition - in this case, 'baker2022cooperative': </p> <p><pre><code>The only correct theory about the relationship between $T_{g}$ and $M_{w}$ \\cite{baker2022cooperative} states that... \n</code></pre> </p> </li> </ol>"},{"location":"latex/#other-useful-things","title":"Other useful things","text":""},{"location":"latex/#force-figuretable-placement","title":"Force figure/table placement","text":"<p>\\(\\LaTeX\\) will automatically try and place floats (e.g. figures and tables) in the 'place that makes most sense' in terms of page usage. If you're making a document with relatively minimal text (for a meeting or something) then this can mean that all your figures get bunched up at the end; 'correct' figure placement is subjective! If you just want your figures to appear in the position they are called (and <code>\\begin{figure}[htbp]</code> isn't working), then you can include the following package to force the behaviour you (probably) want: </p> <pre><code>\\usepackage[section]{placeins}\n</code></pre>"},{"location":"latex/#leeds-thesis-template","title":"Leeds Thesis Template","text":"<p>In this section, I'm going to explain how to get started with the 'Leeds Thesis Template' that has been going around since 2003 or so. I won't explain literally every command but this should allow you to start writing... </p> <p>To start a new project using the Leeds Thesis Template: </p> <ol> <li>Download the latest .zip of the template from our Teams space (General -&gt; Files)</li> <li>Go to Overleaf and click 'New Project'.</li> <li>Click 'Upload Project' </li> <li>Drag .zip into the window / click to browse your PC for the .zip. </li> </ol>"},{"location":"latex/#project-structure","title":"Project Structure","text":"<ul> <li><code>thesis.tex</code> is the 'entry point' for the thesis. You could, technically, add all your text / images etc into this file and have your entire thesis in one big file, but that would be a complete nightmare... </li> <li><code>Classes\\myThesis.cls</code> is the custom document class for this template (it is loaded at the top of <code>thesis.tex</code>: <code>\\documentclass[twoside,12pt]{Classes/myThesis}</code>). This class defines custom environments for the Acknowledgements, Abstract, etc and also sets the spacing for the title page, loads packages and so on. </li> <li>If you scroll down <code>thesis.tex</code> you will see some <code>\\include</code> statements (starting on line 49 with <code>\\include{Dedication/dedication}</code>). Include statements allow you to include other .tex files as if you have copy/pasted their contents straight into <code>thesis.tex</code>. This allows us to separate different sections of our thesis into separate files which helps with organisation but also with compile time: when your thesis starts getting large (multiple chapters, lots of figures etc etc) then it can take a while to compile the whole thesis, which is annoying when you're trying to see how a particular edit is affecting the document. To solve this, you can comment out (add <code>%</code> to the beginning of the line) the <code>\\include</code> statements of chapters/sections you aren't currently editing and that will make the resulting .pdf render faster!</li> <li> <p>Each of the included .tex files has its own folder, but this is completely arbitrary. If you wanted to make things even simpler, you could just make a big folder called 'StuffAtBeginning' and stick all the .tex files for the Acknowledgements, Abstract etc in there instead. You would then just change the <code>\\include</code> statements to have the correct path: </p> <pre><code>...\n\\include{StuffAtBeginning/dedication}\n\\addcontentsline{toc}{chapter}{Acknowledgement}\n\\include{StuffAtBeginning/acknowledgement}\n\\addcontentsline{toc}{chapter}{Abstract}\n\\include{StuffAtBeginning/abstract}\n\\addcontentsline{toc}{chapter}{Abbreviations}\n\\include{StuffAtBeginning/Abbreviations}\n...\n</code></pre> </li> </ul>"},{"location":"latex/#adding-a-chapter","title":"Adding a chapter","text":"<p>If you look at the project structure window (left hand side), you'll see that there is already an <code>Introduction</code> folder. If we open <code>Introduction\\Introduction.tex</code>, we get an example of how to add text / figures to a chapter: </p> <pre><code>%=== Chapter One ===\n\\chapter{Introduction}\n\\graphicspath{{Introduction/IntroductionFigs/}}\n\n\\section{Introduction}\n\nEver advancing developments in computational power....\n\n\\begin{figure}[htbp]\n\\begin{center}\n  \\mbox{\n     \\subfigure[]{{\\includegraphics[width=3.2in, angle=-0]{ScaleCartoon.eps}}}\n     \\subfigure[]{{\\includegraphics[width=1.6in, angle=-0]{Introduction/IntroductionFigs/ScaleCartoon.eps}}}\n       }\n   \\caption{Simulation Scale Cartoon \\citep{nielsen2004cgm}.}\n   \\label{fig:Simscale}\n\\end{center}\n\\end{figure}\n\n\\subsection{Background}\n</code></pre> <ul> <li><code>\\chapter{Introduction}</code> sets the title of the Chapter. </li> <li><code>\\graphicspath{Introduction/IntroductionFigs}</code> adds <code>Introduction/IntroductionFigs</code> to the path that \\(\\LaTeX\\) uses to look for figures when we include them. This means we can include figures directly by their filename without having to include their entire path (e.g. <code>\\subfigure[]{{\\includegraphics[width=3.2in, angle=-0]{ScaleCartoon.eps}}}</code>). We don't have to do this - we could also call them by using their whole path (e.g. <code>\\subfigure[]{{\\includegraphics[width=1.6in, angle=-0]{Introduction/IntroductionFigs/ScaleCartoon.eps}}}</code>).</li> </ul> <p>If we go back to <code>thesis.tex</code> and scroll down to just after the <code>\\mainmatter</code> call, then we can see our Introduction chapter included: <code>\\include{Introduction/Introduction.tex}</code>. If we wanted to add another chapter, we could make a new folder called, for example <code>Chapter 2</code> and put a <code>Chapter2.tex</code> file in the folder. If we wanted, we could also add a folder for figures: <code>Chapter2Figs</code>. We could then add the following to <code>Chapter2.tex</code>:</p> <pre><code>%=== Chapter Two ===\n\\chapter{Chapter 2: Electric Boogaloo}\n\\graphicspath{{Chapter2/Chapter2Figs/}}\n\n\\section{More Science}\n blah blah blah blah\n</code></pre> <p>and add it to our thesis by including it in <code>thesis.tex</code>, by writing the line <code>\\include{Chapter2/Chapter2.tex}</code> under the include statement for the first chapter.</p>"},{"location":"latex/#new-thesis-template","title":"New Thesis Template","text":"<p>We can structure the 'thesis' project in a completely different way. For example, we could structure it like this: </p> <p></p> <p>In this new structure, we have all the figures, front matter, chapters and references in relevant folders. If we want to add a new chapter, we'd just add a new <code>.tex</code> file to the <code>Chapters</code> folder and set the <code>\\graphicspath</code> to a new folder in the <code>Figures</code> folder. We could then include the new chapter in the thesis by adding <code>\\include{Chapters/NewChapter}</code> to <code>thesis.tex</code>.</p>"},{"location":"latex/#compile-latex-without-overleaf","title":"Compile \\(\\LaTeX\\) without Overleaf","text":"<p>So far we have only considered Overleaf as an option for compiling \\(\\LaTeX\\) documents, but that isn't the only option. The following are instructions for how to compile \\(\\LaTeX\\) documents on your PC (well, one of the many ways...): </p> <ol> <li>Download MikTek and install it as a user (you don't need admin rights or AppsAnywhere or permission from the king). At some point it will give you a choice whether you want to 'Install missing packages on-the-fly' or not; for the most 'Overleaf-like' experience, I would say 'yes'. </li> <li> <p>Open PowerShell and change directory, <code>cd</code>, to a folder containing the document you want to compile. As an example, let's go to a thesis folder: </p> <pre><code>cd \"C:\\Users\\YourUsername\\Thesis\"\n</code></pre> </li> <li> <p>We now need to:</p> <ul> <li>run <code>pdflatex</code> to generate some output files,</li> <li>run <code>bibtek</code> on the <code>.aux</code> file that was generated to sort the references, </li> <li>run <code>pdflatex</code> two more times to sort internal references and to link the biliography properly. </li> </ul> <p>In one line (assuminig our <code>.tex</code> file is called <code>thesis.tex</code>): </p> <pre><code>pdflatex.exe .\\thesis.tex &amp;&amp; bibtex.exe thesis.aux &amp;&amp; pdflatex.exe .\\thesis.tex &amp;&amp; pdflatex.exe .\\thesis.tex\n</code></pre> </li> </ol> <p>This will be quite slow the first time (MikTek will probably have to download some packages), but subsequent compilations should be much faster (my thesis compiles from 'scratch' in about 10 seconds). </p>"},{"location":"least-squares-fitting/","title":"Least Squares Fitting","text":"<p>Author: Dan Baker</p>"},{"location":"least-squares-fitting/#introduction","title":"Introduction","text":"<p>This document will show you how to fit some experimental data with a non-linear function. You can then use these examples to fit your own data by changing the data/function. </p> <p>The example data are structural relaxation timescales, \\(\\tau_\\alpha\\),  as a function of temperature. These data can be well described using the Vogel-Fulcher-Tammann (VFT) equation: </p> \\[\\begin{equation}     \\tau_\\alpha = \\tau_{0}e^{\\frac{DT_{0}}{T-T_{0}}}     \\label{eq:VFT} \\end{equation}\\] <p>where \\(\\tau_0\\) is a typical timescale for molecular motion at high temperature (usually \\(10^{-14} - 10^{-12}\\)s), \\(D\\) is the 'strength' parameter (analogous to the inverse of fragility), and \\(T_0\\) is an 'ideal' glass transition temperature. To prevent the fit routine being biased towards larger values of \\(\\tau_\\alpha\\) (as the functional form is exponential) it is often better to fit the logarithm of this equation to the logarithm of the data. In base 10 (for fun): </p> \\[\\begin{equation}     \\mathrm{log}_{10}\\left(\\tau_\\alpha\\right) = \\mathrm{log}_{10}\\left(\\tau_{0}\\right) + \\frac{\\mathrm{log}_{10}\\left(e^{1}\\right)DT_{0}}{T-T_{0}}     \\label{eq:VFT_logged} \\end{equation}\\]"},{"location":"least-squares-fitting/#excel","title":"Excel","text":""},{"location":"least-squares-fitting/#open-the-data","title":"Open the data","text":"<p>Load the data (copy/paste, open .txt file, whatever) into Excel:</p> <p></p>"},{"location":"least-squares-fitting/#generate-fit-line","title":"Generate 'fit' line","text":"<p>Generate data based on the function that you want to fit. In this case, I have generated data based on equation \\ref{eq:VFT_logged}, using column B as input for T (so that the generated fit values are of the same length as the experimental \\(\\tau_\\alpha\\) data) and the cells K3, K4 and K5 as the parameters \\(\\mathrm{log}_{10}(\\tau_0)\\), \\(D\\) and \\(T_0\\).</p> <p></p>"},{"location":"least-squares-fitting/#calculate-chi2","title":"Calculate \\(\\chi^{2}\\)","text":"<p>Find the difference between the experimental data and the generated fit line, squared (\\(\\chi^2\\)) and then sum this column. We will do our least squares minimisation on this sum through variation of the fit parameters \\(\\mathrm{log}_{10}(\\tau_0)\\), \\(D\\) and \\(T_0\\). At this point it's a good idea to plot the experimental data and the fit line so that we have a graphical representation of whether the fit routine gives us a good solution:</p> <p></p>"},{"location":"least-squares-fitting/#load-the-solver","title":"Load the 'Solver'","text":"<p>Load the Excel Solver Add-in by clicking on the Data tab and selecting solver (should be on the very right hand side of the ribbon. If you can't see the `Solver' button then you need to enable it by following these instructions). </p> <p></p> <ul> <li>'Set Objective' should be the cell containing the sum of the \\(\\chi^2\\) column</li> <li>'To' should be 'Min' (we want to minimise the sum of \\(\\chi^2\\) because \\(\\chi^2\\) is the difference between our experimental data and our fit line and so the smaller this difference, the better the fit). </li> <li>'By Changing Variable Cells' should be set to our fit parameters (these will be changed in order to minimise the sum of \\(\\chi^2\\)).</li> <li>'Make Unconstrained Variables Non-Negative' should be unticked in this case (since \\(\\mathrm{log}_{10}(\\tau_0)\\) will probably be negative).</li> <li>Click 'Solve'</li> </ul> <p>After the solver has finished, the 'Solver Results' window should appear. In the ideal case, the fit line should now go through the points and the fit parameter cells should contain the updated fit parameters. If you're happy this is the case, make sure 'Keep Solver Solution' is selected and click `OK' to keep the parameters.</p> <p></p>"},{"location":"least-squares-fitting/#origin","title":"Origin","text":""},{"location":"least-squares-fitting/#data-manipulation","title":"Data Manipulation","text":"<p>First of all, load the data into Origin. At this stage we just need the \\(T\\) values and the \\(\\tau_\\alpha\\) data as they come out:</p> <p></p> <p>Then, calculate the logarithm of the \\(\\tau_\\alpha\\) values in a separate column:</p> <p></p> <p>A plot of \\(\\mathrm{log}_{10}(\\tau_\\alpha)\\) vs \\(T\\) will look like:</p> <p></p>"},{"location":"least-squares-fitting/#defining-a-new-fit-function","title":"Defining a new fit function","text":"<p>The data are clearly non-linear and so we'd like to fit them using a non-linear curve fitting routine. Click on 'Analysis' \\(\\rightarrow\\) 'Fitting' \\(\\rightarrow\\) 'Nonlinear Curve Fit':</p> <p></p> <p>On the window that pops up ('NLfit()') click on the 'Category' dropdown and select 'New...'</p> <p></p> <p>A popup window will ask you to name your new category of functions, so give it a name. Next, click on the dropdown next to 'function' and select `new' again...</p> <p></p> <p>Name the function something and then click `Next'...</p> <p></p> <p>On the next screen you can set up the parameters. Here, \\(T\\) is the independent variable, \\(\\tau\\) is the dependent variable and the equation has 3 free parameters, \\(\\tau_0\\), \\(D\\) and \\(T_0\\), which will be varied in the fitting routine. You can call these what you want, of course! It's worth mentioning again at this point that the values of \\(\\tau\\) and \\(\\tau_0\\) will be the 'logged' values but more on that in a sec... After all looks good, click 'Next'.</p> <p></p> <p>In the next window, the first thing to set is the inital values for the varying parameters. By default, these are set to '1': if you try and fit without setting 'sensible' values here then the fit will not converge. A sensible region for \\(\\tau_0\\) is somewhere in the region of \\(10^{-12}\\) to \\(10^{-14}\\) and so, as we're dealing with the 'logged' value I have set the initial value of \\(\\tau_0\\) to -12. The \\(D\\) parameter, also known as the 'strength' parameter, basically sets the rate at which the VFT equation tends to infinity and the temperature \\(T_0\\) is the temperature at which this occurs. Setting \\(D\\) to some integer value between 2 and 10 and \\(T_0\\) to a `sensible' temperature is usually good enough. Here, I've set \\(D\\) to 5 and \\(T_0\\) to 100K (remember to work in Kelvin).</p> <p>Once these initial parameter values have been set, you can enter the equation in the textbox below. Note that, because I've chosen to work in base 10 logarithm, I have to include a \\(\\mathrm{log}_{10}(e^{1})\\) term... Click on the 'quick check' button and make sure that it spits a result out. If all looks good, click `Next'.</p> <p></p> <p>Just click `Next' through the next screen...</p> <p></p> <p>On the next screen you can set upper and lower bounds for the parameters. This isn't usually necessary for the VFT equation to work (if the initial parameter guesses aren't insane) so I've left these blank in this example... There are two more screens after this one that are not required for this exercise so now just click 'Finish' to get back to the NLFit() window.</p> <p></p>"},{"location":"least-squares-fitting/#fit-the-data","title":"Fit the data","text":"<p>The NLfit() window will complain that you haven't selected any data, which, to be fair, we haven't. In order to select the data, click 'Data Selection' on the left hand side, press the 'plus' button next to 'Input Data' and click the arrow on the right hand side on the 'Range 1' line. Select the logged \\(\\tau_{\\alpha}\\) data. If all goes well in this step there should be a graph on the bottom left with the data and a red fit line, which is just the VFT equation using the initial parameters. After this, click 'Fit' (optional: cross fingers).</p> <p></p> <p>A popup will ask whether you want to 'see the report'. Click 'Yes' and something that looks like this, with the optimised parameters, their errors and a nice graph with a line through the points (hopefully): </p> <p></p> <p>The \\(\\alpha\\) relaxation timescales fitted with the VFT equation are usually plotted in an 'Arrhenius manner' i.e. against \\(1000/T\\). Luckily, the 'fit line' data is available by clicking the tab at the bottom of the 'Book' window and will be called something like 'FitNLCurve1'. You can then replot this data with your \\(\\tau_\\alpha\\) data against \\(1000/T\\) instead.</p>"},{"location":"least-squares-fitting/#matlab","title":"Matlab","text":"<p>Here I will describe a simple fit in Matlab using <code>lsqcurvefit</code> from the Curve Fitting Toolbox. One alternative to this would be to use <code>fminsearch</code> to minimise \\(\\sum{\\chi^{2}}\\).</p>"},{"location":"least-squares-fitting/#data-manipulation_1","title":"Data Manipulation","text":"<p>Firstly, let's put the \\(T\\) and \\(\\tau_\\alpha\\) data into vectors:</p> <pre><code>T = [232;230;228;226;224;222;220;218;216;214;212;210;208;206;204;202;200];\n\ntau_alpha = [3.08000000000000e-06;5.23000000000000e-06;9.34000000000000e-06;...\n1.76000000000000e-05;3.38000000000000e-05;6.70000000000000e-05;0.000141862000000000;...\n0.000313956000000000;0.000740746000000000;0.00186504500000000;...\n0.00518699100000000;0.0156017730000000;0.0495420140000000;0.175158932000000;...\n0.658969937000000;2.58630208200000;10.7767433300000];\n</code></pre>"},{"location":"least-squares-fitting/#define-a-fit-function","title":"Define a fit function","text":"<p>There are a couple of different ways to define a function in Matlab: either in-line in the script you are using or as a separate file.</p>"},{"location":"least-squares-fitting/#in-line","title":"In-Line","text":"<p>To define a function 'in-line' in Matlab one can use an anonymous functions: </p> <pre><code>vft_function = @(p,T) p(1)+((log10(exp(1)).*p(2).*p(3))./(T-p(3)));\n</code></pre> <p>Here, the input parameter 'p' is a vector containing the fit parameters (p(1) = \\(\\mathrm{log}_{10}(\\tau_{0})\\), p(2) = \\(D\\) and p(3) = \\(T_0\\)). Note the '.' before the multiplication and division symbols; these are used because <code>T</code> is a vector and not just a single value.</p>"},{"location":"least-squares-fitting/#separate-file","title":"Separate File","text":"<p>One can also define <code>vft_function</code> in a separate file. This function will return a set of \\(\\tau_\\alpha\\) values for a given set of \\(T\\) values and the fit parameters. The convention in Matlab is to name the function file after the function name i.e. <code>vft_function.m</code>.</p> <pre><code>function tau_alpha = vft_function(T,p)\n    tau_alpha = p(1)+((log10(exp(1)).*p(2).*p(3))./(T-p(3)));\nend\n</code></pre>"},{"location":"least-squares-fitting/#fit-the-data_1","title":"Fit the Data","text":"<p>You can call the <code>lsqcurvefit</code> fitting routine (from the Curve Fitting Toolbox) in the following manner: </p> <p><pre><code>pguess = [-12,10,150];\nfit_params = lsqcurvefit(vft_function,pguess,T,log10(tau));\n</code></pre> The parameters given to <code>lsqcurvefit</code> are as follows: 1) the function (you will need an <code>@</code> symbol before the function name if you're calling it from an external .m file), 2) the initial guesses of the fit parameters (as a vector, in our case <code>pguess</code>), 3) x data to fit to (in this case \\(T\\)), 4) y data to fit to (in this case \\(\\mathrm{log}_{10}(\\tau_\\alpha)\\)), </p> <p>The output, <code>fit_params</code>, will be a vector containing the optimised parameters. We can now generate a <code>tau_alpha_fitted</code> vector based on these optimised parameters and plot both the experimental data and the fit to check that it has worked: </p> <pre><code>tau_alpha_fitted = vft_function(fit_params,T);\n\nfigure(1)\nhold off\nplot(T,log10(tau_alpha),'ro')\nhold on\nplot(T,tau_alpha_fitted,'k-')\n</code></pre> <p></p>"},{"location":"least-squares-fitting/#python","title":"Python","text":"<p>Here I will describe fitting data using the 'Curve Fit' module in the Scipy.Optimize package. Another useful alternative is the 'LMFit' package.</p>"},{"location":"least-squares-fitting/#import-modules","title":"Import modules","text":"<p>First we need to import all the modules we will need. We will be using: 1) <code>scipy.optimize.curve_fit</code> to do the fitting, 2) <code>matplotlib.pyplot</code> to plot our results, and 3) <code>numpy</code> do to some maths.</p> <pre><code>from scipy.optimize import curve_fit\nimport matplotlib.pyplot as plt\nimport numpy as np\n</code></pre>"},{"location":"least-squares-fitting/#data-manipulation_2","title":"Data Manipulation","text":"<p>Put our data into a couple of numpy arrays:</p> <pre><code>T = np.array([232,230,228,226,224,222,220,218,216,214,212,210,208,206,204,202,200])\n\ntau_alpha =np.array([3.08000000000000e-06,5.23000000000000e-06,9.34000000000000e-06,\n1.76000000000000e-05,3.38000000000000e-05,6.70000000000000e-05,\n0.000141862000000000,0.000313956000000000,0.000740746000000000,\n0.00186504500000000,0.00518699100000000,0.0156017730000000,\n0.0495420140000000,0.175158932000000,0.658969937000000,\n2.58630208200000,10.7767433300000])\n</code></pre>"},{"location":"least-squares-fitting/#define-fit-function","title":"Define fit function","text":"<p>Define the VFT function: </p> <pre><code>def VFT_function(T,log10_tau_0,D,T_0):\n    return log10_tau_0+((np.log10(np.exp(1))*D*T_0))/(T-T_0)\n</code></pre>"},{"location":"least-squares-fitting/#fit-the-data_2","title":"Fit the data","text":"<pre><code>pguess = [-12,10,150]\nfit_params,covariance_matrix = curve_fit(VFT_function,T,np.log10(tau_alpha),pguess)\n</code></pre> <p>The parameters given to curve_fit are as follows: 1) the function, 2) x data (\\(T\\)), 3) y data (\\(\\mathrm{log}_{10}(\\tau_\\alpha)\\)), 4) initial guesses for parameters. curve_fit returns 1) 'fit_params' which contains the optimised parameters and 'covariance_matrix' which contains the (ahem...) covariance matrix.</p> <p>We can now generate a fitted set of \\(\\tau_\\alpha\\) data based on the optimised parameters and plot both the experimental data and the fit to check that the fitting has worked.</p> <pre><code>tau_alpha_fitted = VFT_function(T,*fit_params)\n\nfig,ax = plt.subplots()\nax.plot(T,np.log10(tau_alpha),'ro')\nax.plot(T,tau_alpha_fitted,'k-')\n\nplt.show()\n</code></pre> <p></p>"},{"location":"least-squares-fitting/#julia","title":"Julia","text":""},{"location":"least-squares-fitting/#load-modules","title":"Load modules","text":"<pre><code>using LsqFit,PyPlot\n</code></pre>"},{"location":"least-squares-fitting/#data-manipulation_3","title":"Data Manipulation","text":"<p>Now we can add our experimental data into a couple of vectors:</p> <pre><code>T = [232,230,228,226,224,222,220,218,216,214,212,210,208,206,204,202,200];\n\ntau_alpha =[3.08000000000000e-06,5.23000000000000e-06,9.34000000000000e-06,\n1.76000000000000e-05,3.38000000000000e-05,6.70000000000000e-05,\n0.000141862000000000,0.000313956000000000,0.000740746000000000,\n0.00186504500000000,0.00518699100000000,0.0156017730000000,\n0.0495420140000000,0.175158932000000,0.658969937000000,\n2.58630208200000,10.7767433300000];\n</code></pre>"},{"location":"least-squares-fitting/#define-fit-function_1","title":"Define fit function","text":"<p>Julia allows for extremely simple function declarations in-line: </p> <pre><code>vft(T,p) = p[1].+ (log10(exp(1)).*p[2].*p[3]./(T.-p[3]))\n</code></pre> <p>Note the '.' in front of all operators in the function so that we can input a vector for \\(T\\). </p> <p>\\subsection{Fit the data}</p> <p>We will use the <code>curve_fit</code> function in the <code>LsqFit</code> module.</p> <pre><code>pguess = [-12., 10., 150.]\nfit = curve_fit(vft,T,log10.(tau_alpha),pguess)\n</code></pre> <p>The parameters given to the 'curve_fit' are 1) the function, 2) x data (\\(T\\)), 3) y data (\\(\\mathrm{log}_{10}(\\tau_\\alpha))\\)) and 4) the initial guesses for the fit parameters. The function returns a structure which we've sent to the variable 'fit'; the fit parameters can be access from 'fit.param'. Note that the 'pguess' parameters must have a decimal place after to ensure that Julia treats them as floats. </p> <p>Finally, we can generate some fitted \\(\\tau_\\alpha\\) data and plot the result. </p> <pre><code>fitted_tau_alpha = vft(T,fit.param)\n\nfig, ax = subplots()\nax.plot(T,log10.(tau_alpha),\"ro\")\nax.plot(T,fitted_tau_alpha,\"k-\")\n\ndisplay(gcf())\n</code></pre> <p></p>"},{"location":"microscope/","title":"Microscope Alignment","text":"<p>Author: Emily Cooper</p> <p>This document includes instructions on how to setup a microscope, as an aid for people who have already been trained to set up a microscope. This document does not replace training on a microscope.</p> <p></p> <p>Figure 1: Bay 5 microscope from the front. </p> <ol> <li>Clean the lenses  on the microscope gently using a small amount of propanol on lens tissue. Be careful not to scratch lenses, apply too much pressure or use methanol on plastic areas around lenses.</li> <li>Switch on the microscope and put in transmission mode. Looking through the eyepieces, check that no dust remains on the lenses.</li> <li> <p>Focus the microscope onto your sample using the coarse and fine focusing dials on either side of the microscope, shown in Figure 3 below.      Figure 2: Controlling the bottom aperture and brightness in transmission mode on Bay 5.  </p> <p>Info</p> <p>It is best practice to focus onto your sample by moving the stage downwards, so that you don\u2019t risk damaging your sample or the lens through collisions etc. Try to focus onto the sample, but take into account that focusing may be difficult to achieve when using a hot stage on some microscopes. This is because there could be limitations on the adjustment of the stage height so you may not be able to reach the focal point.</p> </li> <li> <p>Close the bottom aperture of the microscope (i.e. close the aperture that controls light into system in transmission mode). </p> <p> Figure 3: Focusing dials on the side of the Bay 5 microscope.  </p> </li> </ol> <p>Info</p> <p>On side of microscope there are two black dials, one will control brightness of light, and the other will open and control the aperture, see Figure 2. When closing the bottom aperture, the shuttering should be visible through the eyepieces. However, on a microscope with an externally powered light source, you cannot control brightness using the black dial on the side of the microscope.  Also consider whether an external DC power source is more suitable for your experiments, such as optical measurements.</p> <ol> <li> <p>Once the bottom aperture has been closed to the minimum, the condenser needs to be focused, using the black dial next to the condenser (see Figure 3). Looking through the eyepiece, focus the condenser so that the polygon shape is focused, as seen in Figure 4A below.</p> </li> <li> <p>Then centre the condenser, using the centring screws on either side of the condenser, as shown in Figure 1. An example of the condenser being centred is shown in Figure 4B.      Figure 4: Focusing (A) and centering (B) the condenser on Bay 5.  </p> </li> </ol> <p>Info</p> <p>Not all microscopes have inbuilt screws, but some have the correct hex keys in slots on the top of the microscope. Otherwise, you may need to find the correct hex key.</p> <ol> <li>Open the bottom aperture to just outside the field of view through the eyepieces (or camera).</li> <li> <p>Remove the left eyepiece on the microscope, to adjust the condenser aperture. Move between the minimum and maximum on the condenser aperture adjustment dial, as seen in Figure 1, in order to get an idea of the intensity. From the maximum intensity, close this aperture so that the light you see is at approximately 80% brightness. </p> <p> Figure 5: Appearance of condenser aperture adjustment dials on (A) Bay 5 and (B) Bay 3. </p> </li> </ol> <p>Info</p> <p>For some microscopes, the condenser aperture adjustment dial can appear differently, shown below in Figure 5. For the dial shown in Figure 5B, the dial gives an indication of the position of the dial depending on the objective lens. Nonetheless, should still use the above method to determine the best position for the dial.</p> <ol> <li>Put the eyepiece back on the microscope.</li> <li>Now check that your sample is centred when rotating the stage. If the sample is not centred, you need to use the stage centring keys.</li> </ol> <p>Info</p> <p>On some microscopes, the stage centring keys are not fixed to the microscope but can be found on the top back right of the microscope in small slots. Please make sure to put these back afterwards.</p> <ol> <li>Every time you change microscope objective, you need to repeat all the above steps to ensure that your microscope is properly focused.</li> </ol>"},{"location":"novocontrol-dielectric/","title":"Novocontrol Broadband Dielectric Spectrometer","text":"<p>Author: Caitlin Probert</p>"},{"location":"novocontrol-dielectric/#experimental-background","title":"Experimental Background","text":"<p>The polarisation of a material can be influenced by the presence of an electric field.  When a small perturbation is introduced by this field the permanent dipoles of the system will reorient themselves to align with the field, as this is the lowest energy state.  Once the perturbation is removed the dipoles will relax to their equilibrium state; this relaxation of the macroscopic polarisation is heavily reliant on the underlying microscopic dynamics of the system, and typically follows the same behaviour.  As a result, the dielectric profile of a material can be used to study its relaxation mechanisms.</p> <p>The dielectric bridge measures the relaxations through impedance.  A sample is sandwiched between two conducting plates with a surface area A, separated by a distance d; this layout essentially creates a filled capacitor with a complex capacitance given by:</p> \\[  C^{*} = \\frac{\\varepsilon^{*}\\varepsilon_{0}A}{d} \\] <p>Where :math:<code>\\varepsilon^{*}</code> is the complex permittivity of the material, and :math:<code>\\varepsilon_{0}</code> is the permittivity of free space. A sinusoidally varying voltage is applied to the plates of the form: </p> <p>$$     V(\\omega)=V_{0}e^{i\\omega t} $$ This results in a complex current with a phase difference :math:<code>\\phi</code> to the voltage, which is measured: </p> \\[     I(\\omega)=I_{0}e^{i(\\omega t+\\phi(\\omega))} \\] <p>From this we can calculate a complex impedance, using Ohm\u2019s law, that can be related to several material dependent variables (such as complex permittivity).</p>"},{"location":"novocontrol-dielectric/#sample-preparation","title":"Sample preparation","text":"<p>A sample should, generally, be constructed in a similar manner to the diagram below: </p> <p></p> <p>The spacers are usually silicon rods with a 100\u03bcm thickness, though different thicknesses may also be used. Different spacer material can also be used; however, the area and capacitance of the spacers need to be considered. </p> <p>Plate sizes can also vary; larger plates are usually better for samples with qa weak dielectric signal as a larger area yields a larger signal. </p> <p>For more fluid samples, there is a liquid cell as shown below: </p> <p></p>"},{"location":"novocontrol-dielectric/#experimental-setup-software","title":"Experimental Setup - Software","text":"<p>The Novocontrol bridge is controlled by the WinDETA software.  There are several steps to prepare an experiment both through the software and the externally connected hardware.</p> <p>On the software there are four windows that are useful during the experiment: Status, Message, Multi Graphics and Temperature Log. </p> <p></p> <p>These give useful information about what is going on with the equipment and measurement during a run. The windows can be opened via the Window tab as shown above.</p> <p>You will need to activate communication between the software and hardware via Temp. Controller&gt;Initialize WinDETA from controller.</p> <p></p>"},{"location":"novocontrol-dielectric/#set-up-measurement-on-a-sample","title":"Set up measurement on a sample","text":"<p>Set file names via File&gt;Set File Names. This assigns a location where your measurement/data will be stored.</p> <p></p> <p>Set sample specifications via Measure&gt;Sample Specification. This is where you input details about the thickness, area and spacers. </p> <p></p> <p>Set the variables you wish to control via Measure&gt;List Order. This tells the software what you wish to change (e.g. temperature) and what you are measuring as a function of (e.g. frequency). This will also determine the order in which things are done i.e. whether you measure frequency sweeps at different temperatures or vice versa. </p> <p></p> <p>Set your temperature and freqency values via Measure&gt;Value Lists&gt;Temperature (or Frequency). This sets the temperatures and frequencies over which you wish to measure.  The machine is capable of a large frequency range; however, frequencies at or around 10<sup>7</sup> Hz push the limits of the equipment and may not give reliable results.  Conversely, frequencies at 10<sup>-2</sup>  Hz take a long time to measure and too many of these will increase the run length significantly.  When selecting temperatures, be careful to select the correct unit.  The temperature will often depend on the sample itself and what the region of interest is. </p> <p></p> <p>When the measurement is set up completely, it is best to do a test run via Measure&gt;Start Single Sweep to make sure there are no initial issues such as short circuits or poor connections.  Short circuits will appear as very high conductivity with a slope of 1 (this may be difficult to distinguish from samples that simply have a high conductivity such as water-based samples or salts), if this is present and unexpected then there is likely a gap/hole in the sample that means there is direct contact between the electrodes.</p> <p>If you wish to perform test measurements (single sweeps) at specific temperatures, the temperature can be controlled manually via Temp. Controller&gt;Activation.  A temperature can be set that you wish your sample to reach (Setpoint) and the heaters can be activated.</p> <p>Warning</p> <p>The sample holder must be in the cryostat for the heaters to be able to change the temperature.</p> <p></p> <p>The sample and gas temperature can be monitored both on the Status or Temperature Log windows and the screen on the dielectric analyser itself. </p> <p>Measurements are monitored through the Multi Graphics windows and different parameters can be monitored via Graphics&gt;Axes Configuration.</p> <p></p>"},{"location":"novocontrol-dielectric/#experimental-setup-hardware","title":"Experimental Setup - Hardware","text":"<p>The bridge consists of a frequency analyser, a sample cell and a temperature control system (comprising of a cryostat, thermocouples and a liquid nitrogen Dewar).  The sample between the electrodes is mounted in the sample cell, which can be tightened to secure the electrodes.  The sample cell is used to apply the voltage across the sample and measure the resulting current.  The cell is placed in a cryostat during the measurements so that the temperature can be controlled using pressurised nitrogen gas.  There are two heaters, one at the bottom of the Dewar and one between the Dewar and the cryostat, which regulate the gas temperature to control the cell/sample temperature.  The basic Dewar setup and sample cell are shown below.</p> <p></p> <p></p> <p>When securing the sample cell, the sample should be flat and flush against both electrodes and the screw should only need to be finger tight (i.e. not overtightened or tightened with tools).  Tightening and loosening the screw can loosen the electrode connection in contact with the upper electrode (F); when this is too loose or disconnected artefacts will appear in your measurements.  Check that this is secure before running measurements.  If this is not secure, it can be tightened similarly to the mounting screw (B) but should not rotate such that the isolation housing screw (D) rotates with it.  </p> <p>Danger</p> <p>THE ISOLATION HOUSING SCREW SHOULD NOT BE ROTATED OR MOVED EXCESSIVELY.  </p>"},{"location":"python/","title":"Python","text":"<p>Author: Dan Baker</p>"},{"location":"python/#installing-python","title":"Installing Python","text":"<p>If you're reading this, you're likely looking for an alternative to Anaconda. My recommended approach to installing Python, and managing 3rd party packages and virtual environments, is uv. </p>"},{"location":"python/#downloading-uv","title":"Downloading uv","text":"<p>The recommended method to install uv on Windows is with their installation script (they advise copy/pasting a command into Powershell). </p> <pre><code>powershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n</code></pre>"},{"location":"python/#using-uv-to-install-python","title":"Using uv to install python","text":"<p>To install Python using uv, type this into Powershell: </p> <pre><code>uv python install\n</code></pre>"},{"location":"python/#setting-up-a-virtual-environment-for-data-analysis","title":"Setting up a virtual environment for data analysis","text":"<p>Warning</p> <p>By default, Windows will not allow you to run 'scripts' in Powershell. This means you will not be able to 'activate' your virtual environment. To solve this, enter the following in Powershell: <pre><code>Set-ExecutionPolicy RemoteSigned -scope CurrentUser\n</code></pre></p> <ol> <li> <p>Open Powershell and navigate to the folder you would like to install your environment in (it doesn't matter where, as long as you know!)</p> </li> <li> <p>Create a virtual environment as follows (I will be naming it 'analysis' but you can name it whatever you like.)      <pre><code>uv venv analysis\n</code></pre> </p> </li> <li> <p>Activate your environment using the activate script (copy/paste the text after 'Activate with:'). In this case:     <pre><code>    analysis\\Scripts\\activate.ps1\n</code></pre>     If you're successful, your prompt will have the name of your venv in brackets at the beginning: </p> <p> </p> </li> <li> <p>Install some 'relevant 3rd party analysis packages' (numpy, scipy, matplotlib, jupyter, pandas) using uv's package manager:</p> <pre><code>uv pip install numpy scipy matplotlib jupyter pandas\n</code></pre> </li> </ol>"},{"location":"python/#spyder","title":"Spyder","text":"<ol> <li> <p>First activate the virtual environment you want to install Spyder in. For this example, I will be installing it in the 'analysis' venv we made before:</p> <p><pre><code>\"C:\\Users\\USERNAME\\analysis\\Scripts\\activate.ps1\"\n</code></pre> If this is succesful, the venv name will appear in brackets at the beginning of the prompt.</p> </li> <li> <p>Install Spyder using uv:</p> <pre><code>uv pip install spyder\n</code></pre> </li> <li> <p>If you're doing this on a PC you have full control of (i.e. not a university one) you can now just type 'spyder' to run Spyder. If not, this will not work because the university blocks all unsigned executables and the 'spyder' command is installed in the environment as an .exe in the Scripts folder (go look!). We can solve this by invoking the <code>start</code> function from the spyder module instead:</p> <pre><code>python -m spyder.app.start\n</code></pre> <p>Spyder will then open, eventually. Should be faster when you open it again.... </p> </li> </ol>"},{"location":"python/#making-a-shortcut-to-spyder","title":"Making a shortcut to Spyder","text":"<p>Our method of running Spyder - activating our environment and then typing <code>python -m spyder.app.start</code> - is a bit cumbersome and annoying. Let's change that! Open a text editor (literally anything; notepad is fine) and type: </p> <pre><code>C:\\Users\\USERNAME\\analysis\\scripts\\python.exe -m spyder.app.start\n</code></pre> <p>Make sure to change the path to the 'python.exe' to the one that matches the environment you installed Spyder in!  Save this file as \"spyder.bat\" (you can name it whatever you like, but you need to save it as a .bat). Double click on the file in file explorer, and Spyder will open! </p> <p>We can turn our .bat into a Desktop Shortcut by right clicking it and selecting \"Send to - Desktop (create shortcut)\". You can then change the icon of this shortcut by right clicking it, clicking 'Properties' and selecting 'Change Icon'.</p> <p></p> <p>If you want this to be the 'Spyder' icon, the go to: \"your_environment_name\\Lib\\site-packages\\spyder\\images\" and select 'windows_app_icon.ico'.</p> <p></p>"},{"location":"python/#vscode","title":"VSCode","text":""},{"location":"python/#installation","title":"Installation","text":"<p>Go to the VSCode Website and click 'Download for Windows'. Double click the installer, and install! It's a good idea to tick the box(es) to add 'Open with Code' to File Explorer. </p>"},{"location":"python/#extensions","title":"Extensions","text":"<p>For working with Python files, I would recommend the following extensions: </p> <ul> <li>Python</li> <li>Jupyter</li> <li>Error Lens</li> <li>Data Wrangler (requires Pandas)</li> </ul>"},{"location":"python/#editing-a-py-file-using-a-venv","title":"Editing a .py file using a venv","text":"<ol> <li>Make a folder for analysis, or navigate to a pre-existing folder.</li> <li>Open VScode at that location by either a) right clicking in the folder in File Explorer and selecting 'Open with Code' or b) navigating to the folder in Powershell and typing <code>code .</code>.</li> <li>Make a new .py in the folder by clicking the new file button in the explorer pane.      </li> <li> <p>In the bottom right of the editor, next to where it says 'Python' click on the version number that's displayed and choose the environment that you actually want (it will try and do this for you...)      </p> <p> </p> <p> </p> </li> </ol>"},{"location":"python/#editing-a-ipynb-jupyter-notebook-file","title":"Editing a .ipynb (Jupyter notebook) file","text":"<ol> <li>Once you have made a .py file and chosen the correct interpreter (with Jupyter installed in the environment), make a new file with the '.ipynb' extension.</li> <li>Click 'Select Kernel' in the top right of the editor. </li> <li>Choose 'Python Environments'</li> <li>Choose the same environment that we chose for the .py file. </li> </ol>"},{"location":"raman/","title":"Renishaw InVia Raman Spectrometer","text":"<p>Author: Dan Baker</p>"},{"location":"raman/#work-in-progress","title":"Work in progress!","text":"<p>Note</p> <p>Click here for measurements of laser power at the sample position </p>"},{"location":"raman/#initial-setup","title":"Initial setup","text":"<ol> <li>Turn on the spectrometer box using the switch on the right-hand-side.</li> <li>Turn on the PC. </li> <li>Load WiRE and select 'Reference all motors'. Wait for the software to load completely. </li> <li>Turn laser on by turning the laser key 45\u00b0 clockwise.</li> </ol>"},{"location":"raman/#laser-power-at-sample","title":"Laser power at sample","text":"<p>The following are power readings of the incident laser at the sample position with various objectives, measured using a Thorlabs S120C sensor. The laser power for our system is 50mW. The 'power setting' column refers to the neutral density filter setting in WiRE (control software). Units of power readings are in mW.</p> Power Setting N PLAN L 50x/0,50 N PLAN 10x/0,25 PH1 N PLAN EPI 20x/0,40 N PLAN 5x/0,12 100% 21.4 31.8 34.5 29.1 50% 12.00 18.2 19.8 16.62 10% 2.26 3.30 3.57 3.02 5% 1.19 1.8 1.95 1.66 1% 0.18 0.25 0.27 0.23 0.5% 0.09 0.14 0.15 0.13"},{"location":"stelar-ffc/","title":"Stelar FFC NMR","text":"<p>Author: Dan Baker</p>"},{"location":"stelar-ffc/#hardware-setup","title":"Hardware Setup","text":"<ol> <li>Turn on the Galden recirculator</li> <li>If compressed air supply isn't on already, open valve.</li> <li>If the PC isn't on already, press orange 'Reset computer array' button</li> <li> <p>Press green TX button (should light up and fan should start). </p> </li> <li> <p>Sample Setup</p> <p>a. Add white 'tube holder' to sample tube and centre your sample using the block on the side of the machine.  b. Place sample into magnet (place into hole in the top)  c. Place weight over tube above white holder to stop the tube floating in the compressed air. </p> </li> <li> <p>Switch on VTC 90 (temperature controller)     a. Press RESET then 1 then ENTER (within a couple of seconds).      b. The display should now read \"Flow = 300\". Press enter (don't change the flow)     c. Enter desired starting temperature. </p> </li> </ol>"},{"location":"stelar-ffc/#software-setup","title":"Software Setup","text":"<ol> <li>Load \"ACQNMR\" software (link on Desktop)</li> <li>Navigate to Hardware =&gt; Magnet =&gt; Switch On. </li> <li>Right click \"Not Connected\" (top right) and click \"Connect\". You should see the front panel of the VTC unit replicated in this box. You can now change the sample temperature by right clicking this box and selecting 'Set Point'.</li> </ol>"},{"location":"stelar-ffc/#measurement-setup-correcting-the-frequecy-offset-f1","title":"Measurement Setup: Correcting the frequecy offset, F1.","text":"<p>You should perform these steps every time you change sample/temperature.</p> <ol> <li>On the \u2018Main Par\u2019 tab, select \u2018EXP\u2019 and choose \u2018NP\u2019 (we are going to use this 1 pulse sequence to set frequency and phasing).</li> <li>Relaxation Field 7MHz.</li> <li>File, New File Name.</li> <li>Recycle delay to 5T1 in the \u2018Main par\u2019 tab (if you don't know T1, choose 1s). </li> <li>If desired, change the number of scans in the \u2018Acq. Par \u2013 Basic\u2019 tab. 1-4 is usually sufficient.</li> <li>Delay tau to 5T1 (if you don't know T1, choose 1s). </li> <li>Click on the GUN to start the measurement </li> <li>Click the Save icon.</li> <li>Click Correct F1 button.</li> </ol>"},{"location":"stelar-ffc/#measurement-setup-measuring-r1t1-spectrum-at-7mhz","title":"Measurement Setup: Measuring R1/T1 spectrum at 7MHz.","text":"<ol> <li>Change experiment to \"NP/S\" on the Main tab. </li> <li>Make sure Recycle Delay is still roughly 5T1 (or 1s if you don't know)</li> <li>Set Relaxation Field to 7 MHz (units are MHz)</li> <li>Set Maximum T1 to what you think T1 is (if you don't know, then assume 0.2s i.e. 1s/5).</li> <li>Click GUN - wait for measurement to finish.</li> <li>Click SAVE</li> <li>Click Evaluation Dialog. Choose RAM from list on right hand side. </li> <li>If the measured T1 is much longer (&gt;120%) than your initial guess of T1Max then repeat this section. Similarly, if T1 is much shorter than you thought it would be (&lt;50%) repeat this section.</li> </ol>"},{"location":"stelar-ffc/#measurement-setup-measuring-r1t1-dispersion-profile","title":"Measurement Setup: Measuring R1/T1 Dispersion Profile","text":"<ol> <li>Navigate to Actions =&gt; Profile Wizard. </li> <li>Click Synchronise Parameters at the bottom of the wizard to copy over the parameters that we set up previously. </li> <li>Change the run parameters (frequency range, number of points, number of repetitions per point etc) on the right hand side of the wizard.</li> <li>Set filename via Export File =&gt; Change. </li> </ol> <p>Info</p> <p>The total run-time for an experiment will be (approximately) = Profile Points x Repetition Points x Tau Blocks x Delay Time. </p> <ol> <li>Click execute in the wizard to start the run. </li> <li>The software will execute the first experiment (at the first frequency) and tell you whether it recommends you continue or not. If you have gone through the setup steps correctly this should work... </li> <li>When the experiment has finished a table of data with the Frequency, T1, R1 etc will be output as a .sef file. </li> </ol>"},{"location":"stelar-ffc/#shut-down","title":"Shut Down","text":"<ol> <li>Turn off heater.</li> <li>Turn off Magenet from software</li> <li>Turn off TX. </li> <li>Turn off Galden recirculator. </li> <li>Turn off air. </li> </ol>"},{"location":"universal-analysis/","title":"TA Universal Analysis","text":"<p>Author: Caitlin Probert</p>"},{"location":"universal-analysis/#analysing-peaks","title":"Analysing Peaks","text":"<p>For peaks with a linear baseline go to Analyze&gt;Integrate Peak&gt;Linear.  Two red crosses will appear either side of the peak, you should place these close to the peak on either side (not on the slopes of the peak itself) and then right click&gt;Accept Limits.  The baseline for this method is taken as a line between the two selected limits.</p> <p>For peaks with a non-linear baseline go to Analyze&gt;Integrate Peak&gt;Sig Horizontal or Sig Tangent.     - Sig Horizontal will provide two red crosses, which can be placed in the same way as before.  This time, the baseline is calculated by drawing a sigmoidal function between the two points you select (based on horizontals from the points) and then puts a midpoint for this function between the horizontals.     - The Sig Tangent function is slightly more complicated; this function provides four crosses, which are to be placed on either side of the peak and represent the start and end point of a tangent either side.  These tangents are then joined with a sigmoid function-this is the baseline.</p>"},{"location":"universal-analysis/#analysing-glass-transitions","title":"Analysing Glass Transitions","text":"<p>To analyse glass transition steps go to Analyze&gt;Glass Transition.  This will bring up two red crosses, as before, which should be placed on either side of the transition step; be careful not to place these on other features (such as enthalpy relaxations) and then right click&gt;Accept Limits.  This function draws a tangent from the two points you select and a tangent from an inflection point on the slope (this is the point with steepest slope on the curve).  The onset is the intersection between the first and second tangent, the midpoint is taken as the inflection point and the end is the intersection of the second and third tangents.  This analysis will give you the onset, midpoint and endpoint of the step/transition and can also give the height of the step.</p>"},{"location":"universal-analysis/#general-tipstricks","title":"General Tips/Tricks","text":"<ul> <li>To control what is displayed when analysing peak and steps go to Analyze&gt;Options and you can select what will be displayed for steps or peaks when analysis is performed</li> <li>To see details about the sample, such as sample mass go to Edit&gt;File Information</li> <li>To see details about how the run was performed go to View&gt;Method Log</li> <li>To view the data as Heat Capacity (where applicable) go to Graph&gt;Signals and select Heat Capacity in the y-axis dropdown menu</li> <li>To overlay data from two runs go to Graph&gt;Overlay&gt;Auto Configure and then select the graphs you want to overlay and these can be viewed on a single plot (this is good for comparing)</li> </ul>"},{"location":"useful-tips/","title":"Useful Tips","text":""},{"location":"useful-tips/#making-an-icon-from-a-png","title":"Making an icon from a .png","text":"<p>First, use an image editor (e.g. Inkscape) make a square image that's at least 256x256px. Then, using Image Magick: </p> <pre><code>magick your_image.png -define icon:auto-resize=256,128,48,32,16 your_icon.ico\n</code></pre>"},{"location":"vacuum-ovens/","title":"Vacuum Ovens","text":""},{"location":"vacuum-ovens/#work-in-progress","title":"Work in progress!","text":""},{"location":"vacuum-ovens/#loading","title":"Loading","text":"<ol> <li>Open the oven door by turning the handle anti-clockwise until it stops. </li> <li>Put your sample on a shelf in the oven. </li> <li>Close the door by shutting it and turning the handle clockwise until it stops.</li> <li>Make sure that the 'vent' and 'vacuum' valves are completely closed (clockwise until stop).</li> <li>Switch the oven on (if it isn't already). </li> <li>Turn the vacuum pump on. </li> <li>Open the vacuum valve on the splitter manifold for the orange tubing. </li> <li> <p>Slowly open the vacuum valve on the oven (turn anti-clockwise). The vacuum gauge will start decreasing.</p> <p>Warning</p> <p>If you hear a lot of hissing air at this point, turn off the pump, close all valves and make sure there is nothing obstructing the door.</p> </li> <li> <p>When the vacuum gauge has stopped decreasing (usually ~-27), close the vacuum valve on the oven. </p> </li> <li>Close vacuum valve on the splitter manifold.</li> <li>Turn off the pump.</li> <li>Set temperature by pressing the up/down arrows on the temperature controller.</li> </ol>"},{"location":"vacuum-ovens/#unloading","title":"Unloading","text":"<p>Warning</p> <p>It is important that you turn on the pump and pump the oven down again before you open the door so that anything that has evaporated from your sample is removed by the pump. </p> <ol> <li>Turn on the vacuum pump. </li> <li>Open the vacuum valve on the splitter manifold. </li> <li>Open the vacuum valve on the oven.</li> <li>Pump out the oven for a few minutes or until the vacuum gauge falls back to the value it reached when you set the oven up. </li> <li>Close the vacuum valve on the oven.</li> <li>Close the vacuum valve on the splitter manifold. </li> <li>Turn off the vaccum pump. </li> <li>Slowly open the 'vent' on the oven. The vacuum gauge should slowly increase back to 0 (atmospheric pressure). </li> <li>When the vacuum gauge reads 0, open the door of the oven by turning the handle anti-clockwise until it stops. </li> <li>Remove your sample. </li> </ol> <p>Danger</p> <p>Your sample might be hot!</p>"}]}